int main()
{
    int digit,number,pow,t_number;
    scanf("%d",&number);
    t_number=number;
    pow=1;
    while(t_number>10)
    {
        pow=pow*10;
        t_number=t_number/10;
    }
    while(pow>=1)
    {
        digit=number/pow;
        number=number%pow;
        pow=pow/10;
        printf(" %d",digit);
    }
    printf("\n");
    return 0;
}
//考试复习
//第二章 用c语言编写程序
//三.程序设计题
//1.求整数均值
//int main()
//{
//    int a,b,c,d;
//    scanf("%d%d%d%d",&a,&b,&c,&d);
//    int sum = a+b+c+d;
//    double average=sum/4.0;
//    printf("sum=%d average=%.1lf",sum,average);
//    return 0;
//}
//3.序列求和
//int main()
//{
//    int m,n,i;
//    double sum=0;
//    scanf("%d%d",&m,&n);//0<m<=n
//    if(m==0)
//        printf("非法输入m范围！");
//    else
//      for(i=m;i<=n;i++)
//         sum+=(pow(i,2)+1.0/i);
//    printf("sum=%.6lf",sum);
//    return 0;
//}
//4.求交错序列前n项的和
//int main()
//{
//    int i,n;
//    float sum=0;
//    scanf("%d",&n);
//    for(i=1;i<=n;i++)
//        sum+=pow(-1,i+1)*(i/(2*i-1.0));
//    printf("sum=%f",sum);
//    return 0;
//}
//5.平方根求和（1+根号2+根号3...）
//int main()
//{
//    int n,i;
//    double sum = 0;
//    scanf("%d",&n);
//    for(i=1;i<=n;i++)
//        sum+=sqrt(i);
//    printf("sum=%lf",sum);
//    return 0;
//}
//6.求给定序列前n项和（1！+2！+3！...）
//double fact(int n)
//{
//    int i=1;
//    double sum = 1.0;
//    for(i=1;i<=n;i++)
//        sum*=i;
//    return sum;
//}
//int main()
//{
//    int n,i;
//    double e;
//    scanf("%d",&n);
//    for(i=1;i<=n;i++)
//        e+=fact(i);
//    printf("e=%lf",e);
//    return 0;
//}

//第三章 分支结构
//三.程序设计题
//1.比较大小 输入3个整数 按从小到大
//int main()
//{
//    int a,b,c;
//    scanf("%d%d%d",&a,&b,&c);
//    if(a>b)
//    {
//    int tmp=a;
//        a=b;
//        b=tmp;
//    }
//        if(a>c)
//    {
//    int t=c;
//        c=a;
//        a=t;
//    }
//    if(b>c)
//    {
//    int tm=c;
//        c=b;
//        b=tm;
//    }
//    printf("%d %d %d",a,b,c);
//    return 0;
//}

//真题卷子
//1.求100以内全部素数
//int main()
//{
//    int i,j;
//    printf("%d ",2);
//    for(i=3;i<100;i+=2)
//    {
//        for(j=2;j<sqrt(i)+1;j++)
//            if(i%j==0)
//                break;
//        if(j>=sqrt(i)+1)
//            printf("%d ",i);                                 1 2 3 4
//    }                                                        1 2 3 4
//    return 0;                                                1 2 3 4
//}                                                            1 2 3 4

//2.求一个4*4矩阵，上三角与下三角的和
//#define row 4
//#define col 4
//int main()
//{
//    int arr[row][col];
//    int i,j,sum1=0,sum2=0;
//    for(i=0;i<row;i++)
//        for(j=0;j<col;j++)
//            scanf("%d",&arr[i][j]);
//    for(i=0;i<row;i++)
//        for(j=i;j<col;j++)
//            sum1+=arr[i][j];
//    for(i=0;i<row;i++)
//        for(j=0;j<=i;j++)
//            sum2+=arr[i][j];
//    printf("sum1=%d sum2=%d",sum1,sum2);
//    return 0;
//}
//3冒泡排序和选择排序对十个整数进行排序 升序
//1.冒泡排序
//void bub_sort(int* p,int sz)
//{
//    int i=0;
//    for(i=0;i<sz-1;i++)
//    {
//        int j=0;
//        for(j=0;j<sz-1-i;j++)
//        {
//            if(p[j]>p[j+1])
//            {
//                int tmp=p[j];
//                p[j]=p[j+1];
//                p[j+1]=tmp;
//            }
//        }
//    }
//}
//选择排序法
//void bub_sort(int* p,int sz)
//{
//    int i,j;
//    for(i=0;i<sz;i++)
//        for(j=i+1;j<=10;j++)
//            if(p[i]>p[j])
//    {
//                int tmp=p[i];
//                p[i]=p[j];
//                p[j]=tmp;
//    }
//}
//int main()
//{
//    int arr[10]={-5,3,56,12,2,-23,12,14,20,42};
//    int i;
//    bub_sort(arr,10);
//    for(i=0;i<10;i++)
//        printf("%d ",arr[i]);
//    return 0;
//}
//求解ax2+bx+c=0的解
//int main()
//{
//    float a,b,c;
//    scanf("%d%d%d",&a,&b,&c);
//    float pan,x1,x2;
//    pan=b*b-4.0*a*c;
//    if(pan>0)
//    {
//        x1=(-b+sqrt(pan))/2*a;
//        x2=(-b-sqrt(pan))/2*a;
//        printf("x1=%lf x2=%f\n",x1,x2);
//    }else if(pan==0)
//    {
//        x1=x2=-b/2.0*a;
//        printf("x1=x2=%f\n",x1);
//    }
//    else
//        printf("方程无实根！\n");
//
//    return 0;
//}