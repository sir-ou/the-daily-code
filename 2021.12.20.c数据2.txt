////例题1
//int main()
//{
//    char a=-1;
//    //原码10000000000000000000000000000001
//    //补码11111111111111111111111111111111
//    //11111111
//    //整形提升1111111111111111111111111111
//    signed char b=-1;
//    //11111111
//    //整形提升1111111111111111111111111111
//    unsigned char c=-1;
//    //11111111
//    //整形提升0000000000000000000011111111  最高位为0 看成正数 原 反 补 同
//    printf("a=%d b=%d c=%d\n",a,b,c);// -1 -1 255
//    return 0;
//}
////例题2
//int main()
//{
//    char a=-128;
//    //原码100000000000000000000000010000000
//    //反码111111111111111111111111101111111
//    //补码111111111111111111111111110000000
//    //截断10000000
//    //整形提升111111  11111111111111110000000 - 补码 由于打印出来的是无符号数 所以我的a被认为是无符号数 原反补同
//    printf("%u\n",a);
//    //%d - 打印十进制的有符号数字
//    //%u - 打印十进制的无符号数字
//    return 0;
//}
//c语言中规定 补码为 10000000 值为-128
//故有符号char的范围为 -128~127
//无符号char的范围为0~255
//例题
//int main()
//{
//    char a=-128;
//    printf("%u\n",a);
//    return 0;
//}
//int main()
//{
//    char a=128;  // 127+1  即01111111 + 00000001 = 10000000 这个值为 -128
//    printf("%u\n",a);
//    return 0;
//}