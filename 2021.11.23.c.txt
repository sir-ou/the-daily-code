

// //函数的声明与定义，用一个头文件和一个源文件来分装定义和声明
// //函数的声明
// int add(int x,int y);
// int main()
// {
//     int a=10;
//     int b=20;
//     int sum=add(a,b);
//     printf("sum=%d\n",sum);
//     return 0;
// }
// //函数的定义
// int add(int x,int y)
// {
//     int z=x+y;
//     return z;
// }



//
// //链式访问-将一个函数的返回值作为另一个函数对实参
// int main()
// {
//     printf("%d",printf("%d",printf("%d",43)));//printf的返回值为所打印出来的字符个数
//     return 0;
// }


//
// //函数每调用一次，值增加一
// void add(int* p)
// {
//     (*p)++;
// }
// int main()
// {
//     int num=0;
//     add(&num);
//     printf("num=%d \n",num);
//     add(&num);
//     printf("num=%d \n",num);
//     add(&num);
//     printf("num=%d \n",num);
//     return 0;
// }


// //函数实现二分查找一个数
// //                   本质上arr是一个指针
// int binary_search(int arr[],int k,int sz)
// {
//     //算法的实现
//     int left=0;
//     int right=sz-1;
//     while(left<=right)
//     {
//
//     int mid=(left+right)/2;//中间元素下标
//     if(arr[mid]<k)
//        left=mid+1;
//     else if(arr[mid]>k)
//        right=mid-1;
//     else
//        return mid;
//
//     }
//    if(left>right)
//         return -1;
// }
//