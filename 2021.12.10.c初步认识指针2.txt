////知识点7 指针数组
////指针数组-数组-存放指针的数组
////数组指针-指针
//int main()
//{
//    int i=0;
//    int a=10;
//    int b=20;
//    int c=30;
//    int* pa=&a;
//    int* pb=&b;
//    int* pc=&c;
//    //整形数组-存放整形
//    //字符数组-存放字符
//    //指针数组-存放指针
//    int* arr[3]={&a,&b,&c};//指针数组
//    for(i=0;i<3;i++)
//    printf("%d\n",*(arr[i]));
//    return 0;
//}
//////知识点6 二级指针
//int main()
//{
//    int a=10;
//    int* pa=&a;
//    int** ppa=&pa;//ppa就是一个二级指针，最右边的*告诉你这是一个指针变量，左边的int*告诉你所指向变量的类型
////    int*** pppa=&ppa;//pppa就是三级指针
//    printf("%d\n",**ppa);
//    return 0;
//}
////知识点5 指针与数组
//int main()
//{
//    int arr[10]={0};
//    printf("%p\n",arr);//数组名-首元素地址
//    printf("%p\n",arr+1);
//
//    printf("%p\n",&arr[0]);
//    printf("%p\n",&arr[0]+1);
//    //两个例外
//    //1.&arr -&数组名-数组名不是首元素地址-数组名表示整个地址
//    printf("%p\n",&arr);
//    printf("%p\n",&arr+1);//加了一个arr数组的地址
//    //2.sizeof（arr）-sizeof（数组名）-数组名表示整个数组
//    return 0;
//}
//int main()
//{
//    int arr[10]={0};
//    int* p=arr;
//    int i=0;
//    for(i=0;i<10;i++)
//        *(p+i)=i;
//    for(i=0;i<10;i++)
//        printf("%d\n",arr[i]);
//    for(i=0;i<10;i++)
//    {
//        printf("%p ==== %p\n",p+i,&arr[i]);
//    }
//    return 0;
//}
