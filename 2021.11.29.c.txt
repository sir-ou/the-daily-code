void Initboard(char board[ROWS][COLS],int rows ,int cols,char set)
{
    int i=0;
    int j=0;

    for(i=0;i<rows;i++)
    {
        for(j=0;j<cols;j++)
        {
            board[i][j]=set;
        }
    }
}
void Displayboard(char board[ROWS][COLS],int row,int col)
{
    int i=0;
    int j=0;
    //打印列号
    for(i=0;i<=row;i++)
    {
        printf("%d ",i);
    }
    printf("\n");
    for(i=1;i<=row;i++)
    {
        printf("%d ",i);
        for(j=1;j<=col;j++)
        {
            printf("%c ",board[i][j]);
        }
        printf("\n");
    }
}
void Setmine(char board[ROWS][COLS],int row,int col)
{
    int count=EASY_COUNT;
    while(count)
    {
        int x=rand()%row+1;//1-9
        int y=rand()%col+1;//1-9
        if(board[x][y]=='0')
        {
            board[x][y]='1';
            count--;
        }
    }
}
int get_mine_count(char mine[ROWS][COLS],int x,int y)
{
    return mine[x-1][y]+
    mine[x-1][y-1]+
    mine[x][y-1]+
    mine[x+1][y-1]+
    mine[x+1][y]+
    mine[x+1][y+1]+
    mine[x][y+1]+
    mine[x-1][y+1]-8*'0';
}
void Findmine(char mine[ROWS][COLS],char show[ROWS][COLS],int row,int col)
{
    int x=0;
    int y=0;
    int win=0;
    while(win<row*col-EASY_COUNT)
    {
    printf("请输入排查雷的坐标：>");
    scanf("%d%d",&x,&y);
    if(x>=1&&x<=row&&y>=1&&y<=col)
    {
        //坐标合法
        //1.踩雷
        if(mine[x][y]=='1')
        {
            printf("很遗憾，你被炸死了！\n");
            Displayboard(mine,row,col);
            break;
        }else//不是雷
        {
            //统计x，y坐标周围有几个雷
            int count=get_mine_count(mine,x,y);
            show[x][y]=count+'0';
            Displayboard(show,row,col);
            win++;
        }

    }
    else
      printf("坐标不合法，请重新输入坐标\n");
    }
    if(win==row*col-EASY_COUNT)
    {printf("你赢了，成功排查出了所有雷！");
    Displayboard(mine,row,col);
    }
}
//int add(int m,int n)
//{
//    int sum=m+n;
//    return sum;
//}
//void initboard(char board,int row,int col)
//{
//    int i=0;
//    int j=0;
//    for(i=0;j<row;i++)
//    {
//        for(j=0;j<col;j++)
//        {
//           board[i][j]=' ';
//        }
//    }
//}
//
//void displayboard(char board,int row,int col)
//{
//    int i=0;
//    for(i=0;i<row;i++)
//    {
//        //1.打印一行数据
//        printf(" %c | %c | %c \n");
//        //打印分割行
//        printf("---|---|---\n");
//
//    }
//}
//扫雷游戏实现！！！！！！！！！！！！！！！！！！
void menu()
{
    printf("****************************\n");
    printf("***** 1. play  0. exit*****\n");
    printf("****************************\n");
}
void game()
{
    //雷的信息储存
    //1.布置好的雷的信息
    char mine[ROWS][COLS]={0};//11*11
    //2.排查出的雷的信息
    char show[ROWS][COLS]={0};
    Initboard(mine,ROWS,COLS,'0');
    Initboard(show,ROWS,COLS,'*');
    //打印棋盘
    //Displayboard(mine,ROW,COL);
    Displayboard(show,ROW,COL);
    //布置雷
    Setmine(mine,ROW,COL);
    Displayboard(mine,ROW,COL);
    //扫雷
    Findmine(mine,show,ROW,COL);
}
void test()
{
    int input=0;
    srand((unsigned int)time(NULL));
    do
    {
        menu();
        printf("请输入：>");
        scanf("%d",&input);
        switch(input)
        {
        case 1:
            game();
            break;
        case 0:
            printf("退出游戏！");
            break;
        default:
            printf("输入错误，请重新输入！");
            break;
        }

    }while(input);
}
int main()
{

    test();
    return 0;
}
