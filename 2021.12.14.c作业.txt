////问题g结构03
//struct point
//{
//    int x;
//    int y;
//};
//void distence(struct point pt[],double jl[],int n)
//{
//    int i=0;
//    for(i=0;i<n;i++)
//    {
//        jl[i]=sqrt(pow(pt[i].x,2)+pow(pt[i].y,2));
//        jl[i]=((int)(jl[i]*100+0.5))/100.0;
//    }
//
//
//}
//int main()
//{
//    int n,i,j=0,k=0;
//    scanf("%d",&n);
//    struct point pt[n];
//    struct point minpt[n];
//    struct point Min;
//    double jl[n];
//    double minjl;
//    int minx;
//    for(i=0;i<n;i++)
//        scanf("%d %d",&pt[i].x,&pt[i].y);
//    distence(pt,jl,n);
//    for(i=0;i<n-1;i++)
//        if(jl[i]<=jl[i+1])
//        {
//            Min=pt[i];
//            minjl=jl[i];
//            pt[i+1]=Min;
//        }
//    for(i=0;i<n;i++)
//        if(jl[i]==minjl)
//        {
//            minpt[j]=pt[i];
//            j++;
//        }
//    for(i=0;i<j-1;i++)
//    {
//        if(minpt[i].x<minpt[i+1].x)
//              {
//                  Min=minpt[i];
//                  minx=minpt[i].x;
//                  minpt[i]=Min;
//              }
//
//    }
//    for(i=0;i<j;i++)
//        if(minpt[i].x==minx)
//        {
//            minpt[k]=pt[i];
//            k++;
//        }
//     for(i=0;i<k-1;i++)
//        if(minpt[i].y<minpt[i+1].y)
//            Min=minpt[i];
//     printf("(%d,%d)\n",Min.x,Min.y);
//    return 0;
//}
////问题f结构02
//struct magnate
//{
//    char name[20];
//    double property;
//};
//void swap(struct magnate ps[],int n)
//{
//    int i,j;
//    for(i=0;i<n-1;i++)
//    {
//        int flag=1;
//        for(j=0;j<n-1-i;j++)
//        {
//           if(ps[j].property<ps[j+1].property)
//          {
//            struct magnate tmp=ps[j];
//            ps[j]=ps[j+1];
//            ps[j+1]=tmp;
//            flag=0;
//          }
//
//        }
//        if(flag==1)
//            break;
//    }
//}
//int main()
//{
//    int n,k,i;
//    scanf("%d",&n);
//    struct magnate ps[n];
//    scanf("%d",&k);
//    for(i=0;i<n;i++)
//    {
//        scanf("%s",ps[i].name);
//        scanf("%lf",&ps[i].property);
//    }
//    swap(ps,n);
//    for(i=0;i<k;i++)
//        printf("%s %.2lf\n",ps[i].name,ps[i].property);
//    return 0;
//}